name: Deploy Java App to EKS

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  setup-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply tfplan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: setup-terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: <your-aws-region>

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: |
          aws eks --region <your-aws-region> update-kubeconfig --name <your-eks-cluster-name>

      - name: Generate build number tag
        id: build_tag
        run: echo "BUILD_NUMBER=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t my-java-app:${{ steps.build_tag.outputs.BUILD_NUMBER }} .
          docker tag my-java-app:${{ steps.build_tag.outputs.BUILD_NUMBER }} <dockerhub-username>/<image-repo>:${{ steps.build_tag.outputs.BUILD_NUMBER }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Push Docker image to Docker Hub
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push <dockerhub-username>/<image-repo>:${{ steps.build_tag.outputs.BUILD_NUMBER }}

      - name: Build and test with Maven
        run: |
          mvn clean test
          mvn verify

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f path/to/your/kubernetes/manifests
          # Example: kubectl apply -f kubernetes/deployment.yaml
          # Ensure your Kubernetes manifests include Ingress resource and Nginx Ingress Controller setup

